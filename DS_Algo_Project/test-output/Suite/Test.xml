<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="18" hostname="DESKTOP-TG48D8J" failures="2" tests="57" name="Test" time="73.091" errors="0" timestamp="2023-01-07T17:43:46 EST">
  <testcase classname="testCases.HomePageTest" name="homepage" time="2.376">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at testCases.HomePageTest.homepage(HomePageTest.java:44)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- homepage -->
  <testcase classname="testCases.RegistrationTest" name="RegistrationDDT" time="0.676"/>
  <testcase classname="testCases.RegistrationTest" name="RegistrationDDT" time="0.634"/>
  <testcase classname="testCases.RegistrationTest" name="RegistrationDDT" time="0.717"/>
  <testcase classname="testCases.RegistrationTest" name="RegistrationDDT" time="0.731"/>
  <testcase classname="testCases.RegistrationTest" name="RegistrationDDT" time="0.79"/>
  <testcase classname="testCases.RegistrationTest" name="RegistrationDDT" time="0.903"/>
  <testcase classname="testCases.RegistrationTest" name="sighOutOnRegistrationPage" time="0.326"/>
  <testcase classname="testCases.SigninTest" name="SigninDDT" time="1.069"/>
  <testcase classname="testCases.SigninTest" name="SigninDDT" time="0.83"/>
  <testcase classname="testCases.SigninTest" name="SigninDDT" time="1.157"/>
  <testcase classname="testCases.DataStructureTest" name="DatastructureTimeComplexity" time="2.265"/>
  <testcase classname="testCases.DataStructureTest" name="DataStructurePrecticeQuestion" time="0.611"/>
  <testcase classname="testCases.ArrayTest" name="Arrayslogin" time="3.605">
    <failure type="junit.framework.AssertionFailedError">
      <![CDATA[junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:47)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertTrue(Assert.java:27)
at testCases.ArrayTest.Arrayslogin(ArrayTest.java:48)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- Arrayslogin -->
  <testcase classname="testCases.ArrayTest" name="ArraysPython" time="1.955"/>
  <testcase classname="testCases.ArrayTest" name="ArraysList" time="0.979"/>
  <testcase classname="testCases.ArrayTest" name="BasicOperation" time="0.911"/>
  <testcase classname="testCases.ArrayTest" name="ApplicationOfArrays" time="0.905"/>
  <testcase classname="testCases.ArrayTest" name="PracticeQuestion" time="1.034"/>
  <testcase classname="testCases.ArrayTest" name="MaxConsecutive" time="0.75"/>
  <testcase classname="testCases.ArrayTest" name="FindNumber" time="0.753"/>
  <testcase classname="testCases.ArrayTest" name="ShortedArrays" time="1.06"/>
  <testcase classname="testCases.LinkedListTest" name="LinledSignIn" time="1.644"/>
  <testcase classname="testCases.LinkedListTest" name="introductionLinkListed" time="1.057"/>
  <testcase classname="testCases.LinkedListTest" name="CreatedLinkedListedPage" time="0.913"/>
  <testcase classname="testCases.LinkedListTest" name="TypeOfLinkedListedPage" time="1.109"/>
  <testcase classname="testCases.LinkedListTest" name="ImplementLinkedListedPython" time="0.917"/>
  <testcase classname="testCases.LinkedListTest" name="TraversalLinkedListedPython" time="0.968"/>
  <testcase classname="testCases.LinkedListTest" name="InsertaionLinkedListedPython" time="0.979"/>
  <testcase classname="testCases.LinkedListTest" name="DeletionLinkedListedPython" time="1.004"/>
  <testcase classname="testCases.LinkedListTest" name="PracticeQuastionLinkedListedPython" time="0.525"/>
  <testcase classname="testCases.StackTest" name="StackOperations" time="4.11"/>
  <testcase classname="testCases.StackTest" name="StackApplications" time="1.354"/>
  <testcase classname="testCases.StackTest" name="StackImplementation" time="1.355"/>
  <testcase classname="testCases.StackTest" name="StackPracticeQuestion" time="0.526"/>
  <testcase classname="testCases.QueueTest" name="QueueInPython" time="2.121"/>
  <testcase classname="testCases.QueueTest" name="QueueCollection" time="0.904"/>
  <testcase classname="testCases.QueueTest" name="QueueImplementation" time="0.937"/>
  <testcase classname="testCases.QueueTest" name="QueueOperations" time="0.959"/>
  <testcase classname="testCases.QueueTest" name="QueuePracticeQuestions" time="0.564"/>
  <testcase classname="testCases.TreeTest" name="OverviewTree" time="1.694"/>
  <testcase classname="testCases.TreeTest" name="Terminology" time="1.027"/>
  <testcase classname="testCases.TreeTest" name="TypesofTree" time="0.948"/>
  <testcase classname="testCases.TreeTest" name="TreeTraversals" time="1.032"/>
  <testcase classname="testCases.TreeTest" name="TraversalsIllustration" time="1.028"/>
  <testcase classname="testCases.TreeTest" name="BinaryTree" time="1.018"/>
  <testcase classname="testCases.TreeTest" name="TypesBinaryTree" time="1.067"/>
  <testcase classname="testCases.TreeTest" name="ImplementationinPython" time="1.128"/>
  <testcase classname="testCases.TreeTest" name="BinaryTreeTraversals" time="1.025"/>
  <testcase classname="testCases.TreeTest" name="ImplementationBinaryTrees" time="0.95"/>
  <testcase classname="testCases.TreeTest" name="ApplicationsBinaryTree" time="0.927"/>
  <testcase classname="testCases.TreeTest" name="BinarySearchTrees" time="1.298"/>
  <testcase classname="testCases.TreeTest" name="ImplementationOfBST" time="1.144"/>
  <testcase classname="testCases.TreeTest" name="PracticeQuestion" time="0.516"/>
  <testcase classname="testCases.GraphTest" name="GraphPage" time="1.603"/>
  <testcase classname="testCases.GraphTest" name="GraphRepresentations" time="1.074"/>
  <testcase classname="testCases.GraphTest" name="Graph" time="0.63"/>
  <testcase classname="testCases.BaseClass" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="testCases.BaseClass" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="testCases.BaseClass" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="testCases.BaseClass" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="testCases.BaseClass" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="testCases.BaseClass" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="testCases.BaseClass" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="testCases.BaseClass" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="testCases.BaseClass" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="testCases.BaseClass" name="@BeforeTest setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest setup -->
  <testcase classname="testCases.BaseClass" name="@BeforeTest setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest setup -->
  <testcase classname="testCases.BaseClass" name="@BeforeTest setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest setup -->
  <testcase classname="testCases.BaseClass" name="@BeforeTest setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest setup -->
  <testcase classname="testCases.BaseClass" name="@BeforeTest setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest setup -->
  <testcase classname="testCases.BaseClass" name="@BeforeTest setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest setup -->
  <testcase classname="testCases.BaseClass" name="@BeforeTest setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest setup -->
  <testcase classname="testCases.BaseClass" name="@BeforeTest setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest setup -->
  <testcase classname="testCases.BaseClass" name="@BeforeTest setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest setup -->
</testsuite> <!-- Test -->
