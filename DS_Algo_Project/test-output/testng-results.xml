<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="18" total="75" passed="55" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-07T17:42:33 EST" name="Suite" finished-at="2023-01-07T17:43:46 EST" duration-ms="73091">
    <groups>
    </groups>
    <test started-at="2023-01-07T17:42:33 EST" name="Test" finished-at="2023-01-07T17:43:46 EST" duration-ms="73091">
      <class name="testCases.QueueTest">
        <test-method signature="QueueInPython()[pri:1, instance:testCases.QueueTest@69c81773]" started-at="2023-01-07T17:43:22 EST" name="QueueInPython" finished-at="2023-01-07T17:43:24 EST" duration-ms="2121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QueueInPython -->
        <test-method signature="QueueCollection()[pri:2, instance:testCases.QueueTest@69c81773]" started-at="2023-01-07T17:43:24 EST" name="QueueCollection" finished-at="2023-01-07T17:43:25 EST" duration-ms="904" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QueueCollection -->
        <test-method signature="QueueImplementation()[pri:3, instance:testCases.QueueTest@69c81773]" started-at="2023-01-07T17:43:25 EST" name="QueueImplementation" finished-at="2023-01-07T17:43:26 EST" duration-ms="937" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QueueImplementation -->
        <test-method signature="QueueOperations()[pri:3, instance:testCases.QueueTest@69c81773]" started-at="2023-01-07T17:43:26 EST" name="QueueOperations" finished-at="2023-01-07T17:43:27 EST" duration-ms="959" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QueueOperations -->
        <test-method signature="QueuePracticeQuestions()[pri:3, instance:testCases.QueueTest@69c81773]" started-at="2023-01-07T17:43:27 EST" name="QueuePracticeQuestions" finished-at="2023-01-07T17:43:28 EST" duration-ms="564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QueuePracticeQuestions -->
      </class> <!-- testCases.QueueTest -->
      <class name="testCases.SigninTest">
        <test-method signature="SigninDDT(java.lang.String,java.lang.String)[pri:0, instance:testCases.SigninTest@1c742ed4]" started-at="2023-01-07T17:42:48 EST" name="SigninDDT" data-provider="signinData" finished-at="2023-01-07T17:42:49 EST" duration-ms="1069" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abghbgh]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ffgg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SigninDDT -->
        <test-method signature="SigninDDT(java.lang.String,java.lang.String)[pri:0, instance:testCases.SigninTest@1c742ed4]" started-at="2023-01-07T17:42:49 EST" name="SigninDDT" data-provider="signinData" finished-at="2023-01-07T17:42:50 EST" duration-ms="830" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[svhjj]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hjjj]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SigninDDT -->
        <test-method signature="SigninDDT(java.lang.String,java.lang.String)[pri:0, instance:testCases.SigninTest@1c742ed4]" started-at="2023-01-07T17:42:50 EST" name="SigninDDT" data-provider="signinData" finished-at="2023-01-07T17:42:51 EST" duration-ms="1157" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sahana9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[user12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SigninDDT -->
      </class> <!-- testCases.SigninTest -->
      <class name="testCases.TreeTest">
        <test-method signature="OverviewTree()[pri:1, instance:testCases.TreeTest@4d14b6c2]" started-at="2023-01-07T17:43:28 EST" name="OverviewTree" finished-at="2023-01-07T17:43:29 EST" duration-ms="1694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OverviewTree -->
        <test-method signature="Terminology()[pri:2, instance:testCases.TreeTest@4d14b6c2]" started-at="2023-01-07T17:43:29 EST" name="Terminology" finished-at="2023-01-07T17:43:30 EST" duration-ms="1027" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Terminology -->
        <test-method signature="TypesofTree()[pri:3, instance:testCases.TreeTest@4d14b6c2]" started-at="2023-01-07T17:43:30 EST" name="TypesofTree" finished-at="2023-01-07T17:43:31 EST" duration-ms="948" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TypesofTree -->
        <test-method signature="TreeTraversals()[pri:4, instance:testCases.TreeTest@4d14b6c2]" started-at="2023-01-07T17:43:31 EST" name="TreeTraversals" finished-at="2023-01-07T17:43:32 EST" duration-ms="1032" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TreeTraversals -->
        <test-method signature="TraversalsIllustration()[pri:5, instance:testCases.TreeTest@4d14b6c2]" started-at="2023-01-07T17:43:32 EST" name="TraversalsIllustration" finished-at="2023-01-07T17:43:34 EST" duration-ms="1028" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TraversalsIllustration -->
        <test-method signature="BinaryTree()[pri:6, instance:testCases.TreeTest@4d14b6c2]" started-at="2023-01-07T17:43:34 EST" name="BinaryTree" finished-at="2023-01-07T17:43:35 EST" duration-ms="1018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BinaryTree -->
        <test-method signature="TypesBinaryTree()[pri:7, instance:testCases.TreeTest@4d14b6c2]" started-at="2023-01-07T17:43:35 EST" name="TypesBinaryTree" finished-at="2023-01-07T17:43:36 EST" duration-ms="1067" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TypesBinaryTree -->
        <test-method signature="ImplementationinPython()[pri:8, instance:testCases.TreeTest@4d14b6c2]" started-at="2023-01-07T17:43:36 EST" name="ImplementationinPython" finished-at="2023-01-07T17:43:37 EST" duration-ms="1128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ImplementationinPython -->
        <test-method signature="BinaryTreeTraversals()[pri:9, instance:testCases.TreeTest@4d14b6c2]" started-at="2023-01-07T17:43:37 EST" name="BinaryTreeTraversals" finished-at="2023-01-07T17:43:38 EST" duration-ms="1025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BinaryTreeTraversals -->
        <test-method signature="ImplementationBinaryTrees()[pri:10, instance:testCases.TreeTest@4d14b6c2]" started-at="2023-01-07T17:43:38 EST" name="ImplementationBinaryTrees" finished-at="2023-01-07T17:43:39 EST" duration-ms="950" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ImplementationBinaryTrees -->
        <test-method signature="ApplicationsBinaryTree()[pri:11, instance:testCases.TreeTest@4d14b6c2]" started-at="2023-01-07T17:43:39 EST" name="ApplicationsBinaryTree" finished-at="2023-01-07T17:43:40 EST" duration-ms="927" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApplicationsBinaryTree -->
        <test-method signature="BinarySearchTrees()[pri:12, instance:testCases.TreeTest@4d14b6c2]" started-at="2023-01-07T17:43:40 EST" name="BinarySearchTrees" finished-at="2023-01-07T17:43:41 EST" duration-ms="1298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BinarySearchTrees -->
        <test-method signature="ImplementationOfBST()[pri:13, instance:testCases.TreeTest@4d14b6c2]" started-at="2023-01-07T17:43:41 EST" name="ImplementationOfBST" finished-at="2023-01-07T17:43:42 EST" duration-ms="1144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ImplementationOfBST -->
        <test-method signature="PracticeQuestion()[pri:14, instance:testCases.TreeTest@4d14b6c2]" started-at="2023-01-07T17:43:42 EST" name="PracticeQuestion" finished-at="2023-01-07T17:43:43 EST" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PracticeQuestion -->
      </class> <!-- testCases.TreeTest -->
      <class name="testCases.DataStructureTest">
        <test-method signature="DatastructureTimeComplexity()[pri:1, instance:testCases.DataStructureTest@333d4a8c]" started-at="2023-01-07T17:42:51 EST" name="DatastructureTimeComplexity" finished-at="2023-01-07T17:42:53 EST" duration-ms="2265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DatastructureTimeComplexity -->
        <test-method signature="DataStructurePrecticeQuestion()[pri:2, instance:testCases.DataStructureTest@333d4a8c]" started-at="2023-01-07T17:42:53 EST" name="DataStructurePrecticeQuestion" finished-at="2023-01-07T17:42:54 EST" duration-ms="611" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DataStructurePrecticeQuestion -->
      </class> <!-- testCases.DataStructureTest -->
      <class name="testCases.RegistrationTest">
        <test-method signature="RegistrationDDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.RegistrationTest@6a8658ff]" started-at="2023-01-07T17:42:42 EST" name="RegistrationDDT" data-provider="RegistrationData" finished-at="2023-01-07T17:42:43 EST" duration-ms="676" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2943]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2943]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ 2943]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegistrationDDT -->
        <test-method signature="RegistrationDDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.RegistrationTest@6a8658ff]" started-at="2023-01-07T17:42:43 EST" name="RegistrationDDT" data-provider="RegistrationData" finished-at="2023-01-07T17:42:44 EST" duration-ms="634" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Zee8819]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[  8819]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8819]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegistrationDDT -->
        <test-method signature="RegistrationDDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.RegistrationTest@6a8658ff]" started-at="2023-01-07T17:42:44 EST" name="RegistrationDDT" data-provider="RegistrationData" finished-at="2023-01-07T17:42:44 EST" duration-ms="717" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[zenny5209]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc1235209]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5209]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegistrationDDT -->
        <test-method signature="RegistrationDDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.RegistrationTest@6a8658ff]" started-at="2023-01-07T17:42:44 EST" name="RegistrationDDT" data-provider="RegistrationData" finished-at="2023-01-07T17:42:45 EST" duration-ms="731" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[rose5466]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[try123455466]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[try1235466]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegistrationDDT -->
        <test-method signature="RegistrationDDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.RegistrationTest@6a8658ff]" started-at="2023-01-07T17:42:45 EST" name="RegistrationDDT" data-provider="RegistrationData" finished-at="2023-01-07T17:42:46 EST" duration-ms="790" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mily5571]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ab5571]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ab5571]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegistrationDDT -->
        <test-method signature="RegistrationDDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.RegistrationTest@6a8658ff]" started-at="2023-01-07T17:42:46 EST" name="RegistrationDDT" data-provider="RegistrationData" finished-at="2023-01-07T17:42:47 EST" duration-ms="903" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sahana95158]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[user123455158]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[user123455158]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegistrationDDT -->
        <test-method signature="sighOutOnRegistrationPage()[pri:1, instance:testCases.RegistrationTest@6a8658ff]" started-at="2023-01-07T17:42:47 EST" name="sighOutOnRegistrationPage" finished-at="2023-01-07T17:42:47 EST" duration-ms="326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sighOutOnRegistrationPage -->
      </class> <!-- testCases.RegistrationTest -->
      <class name="testCases.ArrayTest">
        <test-method signature="Arrayslogin()[pri:1, instance:testCases.ArrayTest@55de24cc]" started-at="2023-01-07T17:42:54 EST" name="Arrayslogin" finished-at="2023-01-07T17:42:57 EST" duration-ms="3605" status="FAIL">
          <exception class="junit.framework.AssertionFailedError">
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:47)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertTrue(Assert.java:27)
at testCases.ArrayTest.Arrayslogin(ArrayTest.java:48)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Arrayslogin -->
        <test-method signature="ArraysPython()[pri:2, instance:testCases.ArrayTest@55de24cc]" started-at="2023-01-07T17:42:57 EST" name="ArraysPython" finished-at="2023-01-07T17:42:59 EST" duration-ms="1955" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ArraysPython -->
        <test-method signature="ArraysList()[pri:3, instance:testCases.ArrayTest@55de24cc]" started-at="2023-01-07T17:42:59 EST" name="ArraysList" finished-at="2023-01-07T17:43:00 EST" duration-ms="979" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ArraysList -->
        <test-method signature="BasicOperation()[pri:4, instance:testCases.ArrayTest@55de24cc]" started-at="2023-01-07T17:43:00 EST" name="BasicOperation" finished-at="2023-01-07T17:43:01 EST" duration-ms="911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BasicOperation -->
        <test-method signature="ApplicationOfArrays()[pri:5, instance:testCases.ArrayTest@55de24cc]" started-at="2023-01-07T17:43:01 EST" name="ApplicationOfArrays" finished-at="2023-01-07T17:43:02 EST" duration-ms="905" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApplicationOfArrays -->
        <test-method signature="PracticeQuestion()[pri:6, instance:testCases.ArrayTest@55de24cc]" started-at="2023-01-07T17:43:02 EST" name="PracticeQuestion" finished-at="2023-01-07T17:43:03 EST" duration-ms="1034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PracticeQuestion -->
        <test-method signature="MaxConsecutive()[pri:7, instance:testCases.ArrayTest@55de24cc]" started-at="2023-01-07T17:43:03 EST" name="MaxConsecutive" finished-at="2023-01-07T17:43:04 EST" duration-ms="750" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MaxConsecutive -->
        <test-method signature="FindNumber()[pri:8, instance:testCases.ArrayTest@55de24cc]" started-at="2023-01-07T17:43:04 EST" name="FindNumber" finished-at="2023-01-07T17:43:05 EST" duration-ms="753" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FindNumber -->
        <test-method signature="ShortedArrays()[pri:9, instance:testCases.ArrayTest@55de24cc]" started-at="2023-01-07T17:43:05 EST" name="ShortedArrays" finished-at="2023-01-07T17:43:06 EST" duration-ms="1060" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShortedArrays -->
      </class> <!-- testCases.ArrayTest -->
      <class name="testCases.StackTest">
        <test-method signature="StackOperations()[pri:1, instance:testCases.StackTest@30f842ca]" started-at="2023-01-07T17:43:15 EST" name="StackOperations" finished-at="2023-01-07T17:43:19 EST" duration-ms="4110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StackOperations -->
        <test-method signature="StackApplications()[pri:2, instance:testCases.StackTest@30f842ca]" started-at="2023-01-07T17:43:19 EST" name="StackApplications" finished-at="2023-01-07T17:43:20 EST" duration-ms="1354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StackApplications -->
        <test-method signature="StackImplementation()[pri:2, instance:testCases.StackTest@30f842ca]" started-at="2023-01-07T17:43:20 EST" name="StackImplementation" finished-at="2023-01-07T17:43:22 EST" duration-ms="1355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StackImplementation -->
        <test-method signature="StackPracticeQuestion()[pri:3, instance:testCases.StackTest@30f842ca]" started-at="2023-01-07T17:43:22 EST" name="StackPracticeQuestion" finished-at="2023-01-07T17:43:22 EST" duration-ms="526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StackPracticeQuestion -->
      </class> <!-- testCases.StackTest -->
      <class name="testCases.GraphTest">
        <test-method signature="GraphPage()[pri:1, instance:testCases.GraphTest@7e990ed7]" started-at="2023-01-07T17:43:43 EST" name="GraphPage" finished-at="2023-01-07T17:43:44 EST" duration-ms="1603" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GraphPage -->
        <test-method signature="GraphRepresentations()[pri:2, instance:testCases.GraphTest@7e990ed7]" started-at="2023-01-07T17:43:44 EST" name="GraphRepresentations" finished-at="2023-01-07T17:43:45 EST" duration-ms="1074" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GraphRepresentations -->
        <test-method signature="Graph()[pri:3, instance:testCases.GraphTest@7e990ed7]" started-at="2023-01-07T17:43:45 EST" name="Graph" finished-at="2023-01-07T17:43:46 EST" duration-ms="630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Graph -->
      </class> <!-- testCases.GraphTest -->
      <class name="testCases.LinkedListTest">
        <test-method signature="LinledSignIn()[pri:0, instance:testCases.LinkedListTest@dc7df28]" started-at="2023-01-07T17:43:06 EST" name="LinledSignIn" finished-at="2023-01-07T17:43:07 EST" duration-ms="1644" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LinledSignIn -->
        <test-method signature="introductionLinkListed()[pri:1, instance:testCases.LinkedListTest@dc7df28]" started-at="2023-01-07T17:43:07 EST" name="introductionLinkListed" finished-at="2023-01-07T17:43:08 EST" duration-ms="1057" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- introductionLinkListed -->
        <test-method signature="CreatedLinkedListedPage()[pri:2, instance:testCases.LinkedListTest@dc7df28]" started-at="2023-01-07T17:43:08 EST" name="CreatedLinkedListedPage" finished-at="2023-01-07T17:43:09 EST" duration-ms="913" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreatedLinkedListedPage -->
        <test-method signature="TypeOfLinkedListedPage()[pri:3, instance:testCases.LinkedListTest@dc7df28]" started-at="2023-01-07T17:43:09 EST" name="TypeOfLinkedListedPage" finished-at="2023-01-07T17:43:10 EST" duration-ms="1109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TypeOfLinkedListedPage -->
        <test-method signature="ImplementLinkedListedPython()[pri:4, instance:testCases.LinkedListTest@dc7df28]" started-at="2023-01-07T17:43:10 EST" name="ImplementLinkedListedPython" finished-at="2023-01-07T17:43:11 EST" duration-ms="917" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ImplementLinkedListedPython -->
        <test-method signature="TraversalLinkedListedPython()[pri:5, instance:testCases.LinkedListTest@dc7df28]" started-at="2023-01-07T17:43:11 EST" name="TraversalLinkedListedPython" finished-at="2023-01-07T17:43:12 EST" duration-ms="968" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TraversalLinkedListedPython -->
        <test-method signature="InsertaionLinkedListedPython()[pri:6, instance:testCases.LinkedListTest@dc7df28]" started-at="2023-01-07T17:43:12 EST" name="InsertaionLinkedListedPython" finished-at="2023-01-07T17:43:13 EST" duration-ms="979" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InsertaionLinkedListedPython -->
        <test-method signature="DeletionLinkedListedPython()[pri:7, instance:testCases.LinkedListTest@dc7df28]" started-at="2023-01-07T17:43:13 EST" name="DeletionLinkedListedPython" finished-at="2023-01-07T17:43:14 EST" duration-ms="1004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeletionLinkedListedPython -->
        <test-method signature="PracticeQuastionLinkedListedPython()[pri:8, instance:testCases.LinkedListTest@dc7df28]" started-at="2023-01-07T17:43:14 EST" name="PracticeQuastionLinkedListedPython" finished-at="2023-01-07T17:43:15 EST" duration-ms="525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PracticeQuastionLinkedListedPython -->
      </class> <!-- testCases.LinkedListTest -->
      <class name="testCases.HomePageTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:testCases.HomePageTest@5e7cd6cc]" started-at="2023-01-07T17:42:34 EST" name="setup" finished-at="2023-01-07T17:42:38 EST" duration-ms="4303" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="homepage()[pri:0, instance:testCases.HomePageTest@5e7cd6cc]" started-at="2023-01-07T17:42:38 EST" name="homepage" finished-at="2023-01-07T17:42:41 EST" duration-ms="2376" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at testCases.HomePageTest.homepage(HomePageTest.java:44)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homepage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.HomePageTest@5e7cd6cc]" started-at="2023-01-07T17:43:46 EST" name="tearDown" finished-at="2023-01-07T17:43:46 EST" duration-ms="409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.HomePageTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
